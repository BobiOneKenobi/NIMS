%% Copyright 2014 MERCIER David
function model_kao(OPTIONS)
%% Function used to calculate the hardness in bilayer sample with
% the model of Kao and Byrne (1981).

gui = guidata(gcf);

x = 1./gui.results.hc;
x = checkValues(x);
t1 = gui.results.t1_corr;

% A(1) = Hf

bilayer_model = @(A, x) ...
    gui.data.Hs + (2*gui.config.numerics.k_Kao*t1 .* ...
    (A(1) - gui.data.Hs)) .* x;
	
% Make a starting guess
gui.results.A0 = [gui.data.Ef_red];

[gui.results.Ef_red_sol_fit, ...
    gui.results.resnorm, ...
    gui.results.residual, ...
    gui.results.exitflag, ...
    gui.results.output, ...
    gui.results.lambda, ...
    gui.results.jacobian] =...
    lsqcurvefit(bilayer_model, gui.results.A0, x, ...
    gui.results.H, ...
    gui.config.numerics.Min_YoungModulus, ...
    gui.config.numerics.Max_YoungModulus, ...
    OPTIONS);

gui.results.H = 1e-9*(...
    1e9.*gui.data.Hs + (2*gui.config.numerics.k_Kao*t1 .* ...
    (A(1) - 1e9.*gui.data.Hs)) .* x);

gui.results.Hf = 1e-9*(...
    1e9.*gui.data.Hs + (1./x .* (gui.results.H - 1e9.*gui.data.Hs) ./ ...
    (2*gui.config.numerics.k_Kao*t1)));

guidata(gcf, gui);

end